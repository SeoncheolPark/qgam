% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{qdo}
\alias{qdo}
\title{Manipulating the output of \code{mqgam}}
\usage{
qdo(obj, qu, fun, ...)
}
\arguments{
\item{obj}{A list which is the output of a \code{mqgam} call.}

\item{qu}{A scalar in (0, 1) representing the quantile of interest, which should be an element of \code{names(obj$fit)}.}

\item{fun}{The method or function that we want to use on the \code{gamObject} corresponding to quantile \code{qu}. For instance
\code{predict}, \code{plot} or \code{summary}.}

\item{...}{Addinal arguments to be passed to \code{fun}.}
}
\value{
The output of \code{fun}, whatever that is.
}
\description{
Contrary to \code{qgam}, \code{mqgam} does not output a standard \code{gamObject}, hence
             methods such as \code{predict.gam} or \code{plot.gam} cannot be used directly. \code{qdo}
             provides a simple wrapper for such methods.
}
\examples{
library(qgam); library(MASS)

quSeq <- c(0.4, 0.6)
set.seed(737)
fit <- mqgam(accel~s(times, k=20, bs="ad"), data = mcycle, err = 0.01, qu = quSeq, 
             control = list("tol" = 0.01)) # <- semi-sloppy tolerance to speed-up calibration 

qdo(fit, 0.4, summary)
qdo(fit, 0.4, plot)
}
\author{
Matteo Fasiolo <matteo.fasiolo@gmail.com>.
}

